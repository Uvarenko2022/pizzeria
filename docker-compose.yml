version: '3.9'

services:
  db:
    image: postgres:13-alpine
    container_name: db_postgres
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB_HOST: ${POSTGRES_DB_HOST}
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d restaurant -U user"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7.0-alpine
    container_name: cache_redis
    volumes:
      - cache:/data
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  restaurant:
    container_name: restaurant
    depends_on:
      cache:
        condition: service_healthy
      db: 
        condition: service_healthy
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 8080:8080
volumes:
  data:
  cache: